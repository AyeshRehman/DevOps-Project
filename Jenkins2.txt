pipeline {
    agent any 
    stages {
        stage('Checkout SCM') {
            steps {  
                git branch: 'main', credentialsId: 'githubCredentials', url: 'https://github.com/ayeshrehman/DevOps-Project.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImageName = "ayeshrehman/DevOps-Project:${env.BUILD_NUMBER}"
                    sh "docker build -t ${dockerImageName} ."
                }
            }
        }
        stage('Push to DockerHub') {
            steps {
                script {
                    def dockerImageName = "ayeshrehman/DevOps-Project:${env.BUILD_NUMBER}"
                    withCredentials([usernamePassword(credentialsId: 'dockerhubCredentials', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                        sh "docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS docker.io"
                        sh "docker push ${dockerImageName}"
                        sh "docker logout"
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    def dockerImageName = "ayeshrehman/DevOps-Project:${env.BUILD_NUMBER}"

                    // Update the image in the deployment file
                    sh "sed -i 's|ayeshrehman/DevOps-Project|${dockerImageName}|' ./deployment.yaml"
                    // Optionally, update service.yaml if it references the image

                    // Use Publish Over SSH to copy the files and execute the command
                    sshPublisher(publishers: [
                        sshPublisherDesc(
                            configName: "deploymentServer",
                            transfers: [
                                sshTransfer(
                                    sourceFiles: "deployment.yaml",
                                    removePrefix: "",
                                    remoteDirectory: ".",
                                    execCommand: "kubectl apply -f ./deployment.yaml"
                                )
                            ]
                        )
                    ])
                }
            }
        }
    }
}
